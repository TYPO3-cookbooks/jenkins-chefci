# <%

if ENV['JENKINS_COPY_CHEF_CREDENTIALS']

  require 'chef/knife'
  k = Chef::Knife.new
  k.configure_chef


  # the existence of the node_name can be taken as "this workstation has a chef setup"
  def is_configured?
    not Chef::Config[:node_name].nil?
  end

  def client_config
    cfg = {}
    %w{client_key node_name chef_server_url}.each{|k| cfg[k.to_sym] = Chef::Config[k]}
    cfg
  end

  def client_key_exists?
    File.exists?(Chef::Config[:client_key]) && File.readable?(Chef::Config[:client_key])
  end

  def client_key_contents_escaped
    File.read(Chef::Config[:client_key]).gsub(/\n/, "|")
  end

elsif ENV['CI']
  # nothing...
else
  STDERR.puts "To interact with your Chef Server, please set JENKINS_COPY_CHEF_CREDENTIALS=1"
end


%>
---
driver:
  name: vagrant
  customize:
    cpus: 4
    memory: 2048
  network:
    # Allow access to the Jenkins webui which is useful when troubleshooting
    - - forwarded_port
      - guest: 8080
        host: 9090
        auto_correct: true
    # Use DHCP to be save for multiple instances
    - ["private_network", {type: "dhcp"}]

provisioner:
  name: chef_zero

verifier:
  name: inspec

platforms:
  - name: ubuntu-16.04
    run_list:
      - recipe[apt]
  - name: debian-8.8
    run_list:
      - recipe[apt]

suites:
  - name: essentials
    run_list:
      - recipe[jenkins-chefci::default]
    verifier:
      inspec_tests:
        - test/smoke/default
    attributes:
      java:
        oracle:
          accept_oracle_download_terms: true
  - name: full
    attributes:
      jenkins_chefci:
        github_credentials:
          login: <%= ENV['JENKINS_GITHUB_LOGIN'] %>
          token: <%= ENV['JENKINS_GITHUB_TOKEN'] %>
<% if ENV['JENKINS_COPY_CHEF_CREDENTIALS'] and is_configured? %>
        knife_config: <%= client_config.to_json %>
        knife_client_key: '<%= client_key_contents_escaped %>'
<% end %>
      java:
        oracle:
          accept_oracle_download_terms: true
    run_list:
      - recipe[jenkins-chefci::full]
    verifier:
      inspec_tests:
        - test/smoke/full
